{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Sandbox environment for AWS CLI Learning Platform",
	"Parameters": {
		"LabDurationMinutes": {
			"Type": "Number",
			"Default": 5,
			"Description": "Duration of the lab session in minutes"
		}
	},
	"Resources": {
		"SandboxUserRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": "SandboxUserRole",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"AWS": "*"
							},
							"Action": "sts:AssumeRole",
							"Condition": {
								"StringEquals": {
									"aws:PrincipalTag/LabSession": "active"
								}
							}
						}
					]
				},
				"Policies": [
					{
						"PolicyName": "SandboxUserPolicy",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"ec2:RunInstances",
										"ec2:TerminateInstances",
										"ec2:DescribeInstances",
										"ec2:CreateVpc",
										"ec2:DeleteVpc",
										"ec2:DescribeVpcs"
									],
									"Resource": "*",
									"Condition": {
										"StringEqualsIfExists": {
											"ec2:InstanceType": "t2.micro"
										}
									}
								}
							]
						}
					}
				]
			}
		},
		"LambdaExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": "LambdaExecutionRole",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "lambda.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"ManagedPolicyArns": [
					"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
				],
				"Policies": [
					{
						"PolicyName": "LambdaEC2CleanupPolicy",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": [
										"ec2:DescribeInstances",
										"ec2:TerminateInstances"
									],
									"Resource": "*"
								}
							]
						}
					}
				]
			}
		},
		"CleanupFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"FunctionName": "SandboxCleanup",
				"Handler": "index.handler",
				"Runtime": "python3.9",
				"Role": {
					"Fn::GetAtt": [
						"LambdaExecutionRole",
						"Arn"
					]
				},
				"Timeout": 300,
				"Code": {
					"ZipFile": "import boto3\nimport datetime\n\ndef handler(event, context):\n    ec2 = boto3.client('ec2')\n    now = datetime.datetime.utcnow()\n    \n    # Describe instances with the LabSession tag\n    instances = ec2.describe_instances(\n        Filters=[{'Name': 'tag:LabSession', 'Values': ['active']}]\n    )\n    \n    terminated_instances = []\n    for reservation in instances['Reservations']:\n        for instance in reservation['Instances']:\n            launch_time = instance['LaunchTime'].replace(tzinfo=None)\n            age = (now - launch_time).total_seconds() / 60\n            \n            if age > 5:  # Cleanup after 5 minutes\n                instance_id = instance['InstanceId']\n                ec2.terminate_instances(InstanceIds=[instance_id])\n                terminated_instances.append(instance_id)\n    \n    return {\n        'statusCode': 200,\n        'body': f\"Cleanup executed. Terminated instances: {terminated_instances}\"\n    }"
				}
			}
		},
		"CleanupEventRule": {
			"Type": "AWS::Events::Rule",
			"Properties": {
				"Name": "SandboxCleanupTrigger",
				"ScheduleExpression": {
					"Fn::Sub": "rate(${LabDurationMinutes} minutes)"
				},
				"State": "ENABLED",
				"Targets": [
					{
						"Arn": {
							"Fn::GetAtt": [
								"CleanupFunction",
								"Arn"
							]
						},
						"Id": "CleanupLambda"
					}
				]
			}
		},
		"CleanupLambdaPermission": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"FunctionName": {
					"Ref": "CleanupFunction"
				},
				"Principal": "events.amazonaws.com",
				"SourceArn": {
					"Fn::GetAtt": [
						"CleanupEventRule",
						"Arn"
					]
				}
			}
		}
	},
	"Outputs": {
		"SandboxUserRoleArn": {
			"Description": "ARN of the IAM role that users will assume for sandbox access",
			"Value": {
				"Fn::GetAtt": [
					"SandboxUserRole",
					"Arn"
				]
			}
		}
	}
}